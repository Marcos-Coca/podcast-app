{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrador\\\\Desktop\\\\platzi\\\\nextJS\\\\pages\\\\channel.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nconst Channel = ({\n  channel,\n  audioClips = [],\n  series = []\n}) => {\n  return __jsx(React.Fragment, null, __jsx(\"header\", {\n    className: \"jsx-2370840541\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 13\n    }\n  }, \"Podcast\"), __jsx(\"h1\", {\n    className: \"jsx-2370840541\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 13\n    }\n  }, channel.title), __jsx(\"h2\", {\n    className: \"jsx-2370840541\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, \"Audios\"), audioClips.map(audio => __jsx(\"div\", {\n    className: \"jsx-2370840541\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }\n  }, audio.title)), __jsx(\"h2\", {\n    className: \"jsx-2370840541\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, \"Series\"), series.map(serie => __jsx(\"div\", {\n    className: \"jsx-2370840541\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, serie.title)), __jsx(_JSXStyle, {\n    id: \"950548216\",\n    __self: this\n  }, \"h1.jsx-2370840541{font-weight:700;padding:15px;}header.jsx-2370840541{color:#fff;background:#8756ca;padding:15px;text-align:center;}.channels.jsx-2370840541{display:grid;grid-gap:15px;padding:15px;grid-template-columns:repeat( auto-fill, minmax(160px,1fr) );}a.channel.jsx-2370840541{display:block;margin-bottom:0.5em;color:#333;-webkit-text-decoration:none;text-decoration:none;}.channel.jsx-2370840541 img.jsx-2370840541{border-radius:3px;box-shadow:0px 2px 6px rgba(0,0,0,0.15);width:100%;}h2.jsx-2370840541{padding:5px;font-size:0.9em;font-weight:600;margin:0;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQWRtaW5pc3RyYWRvclxcRGVza3RvcFxccGxhdHppXFxuZXh0SlNcXHBhZ2VzXFxjaGFubmVsLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWV3QixBQUdxQyxBQUlMLEFBTUUsQUFTQyxBQU1JLEFBS04sV0F6Qk8sQ0EwQkgsQ0FwQkYsQ0FTTSxFQW5CUCxFQXlCOEIsU0FkOUIsQ0FvQkcsQ0E5QnBCLENBSWlCLElBZUYsTUFMVixHQVRpQixDQTBCVCxDQVhZLFFBWUgsS0FQUCxHQW5CZixRQW9CQSxFQU9BLHdCQVpBLE1BTkEiLCJmaWxlIjoiQzpcXFVzZXJzXFxBZG1pbmlzdHJhZG9yXFxEZXNrdG9wXFxwbGF0emlcXG5leHRKU1xccGFnZXNcXGNoYW5uZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBDaGFubmVsID0gKHsgY2hhbm5lbCwgYXVkaW9DbGlwcyA9IFtdLCBzZXJpZXMgPSBbXSB9KSA9PiB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDw+XHJcbiAgICAgICAgICAgIDxoZWFkZXI+UG9kY2FzdDwvaGVhZGVyPlxyXG4gICAgICAgICAgICA8aDE+e2NoYW5uZWwudGl0bGV9PC9oMT5cclxuXHJcbiAgICAgICAgICAgIDxoMj5BdWRpb3M8L2gyPlxyXG4gICAgICAgICAgICB7YXVkaW9DbGlwcy5tYXAoKGF1ZGlvKSA9PiAoXHJcbiAgICAgICAgICAgICAgICA8ZGl2PnthdWRpby50aXRsZX08L2Rpdj5cclxuICAgICAgICAgICAgKSl9XHJcbiAgICAgICAgICAgIDxoMj5TZXJpZXM8L2gyPlxyXG4gICAgICAgICAgICB7c2VyaWVzLm1hcCgoc2VyaWUpID0+IChcclxuICAgICAgICAgICAgICAgIDxkaXY+e3NlcmllLnRpdGxlfTwvZGl2PlxyXG4gICAgICAgICAgICApKX1cclxuXHJcbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAgICAgICAgIGgxIHtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBoZWFkZXIge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICM4NzU2Y2E7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTVweDtcclxuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAuY2hhbm5lbHMge1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgZ3JpZC1nYXA6IDE1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTVweDtcclxuICAgICAgICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXV0by1maWxsLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtaW5tYXgoMTYwcHgsIDFmcilcclxuICAgICAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgYS5jaGFubmVsIHtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzMzMztcclxuICAgICAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAuY2hhbm5lbCBpbWcge1xyXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICAgICAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAwcHggMnB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaDIge1xyXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDVweDtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDAuOWVtO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH08L3N0eWxlPlxyXG5cclxuICAgICAgICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+e2BcclxuICAgICAgICAgICAgICAgIGJvZHkge1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogc3lzdGVtLXVpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBgfTwvc3R5bGU+XHJcbiAgICAgICAgPC8+XHJcbiAgICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFNlcnZlclNpZGVQcm9wcyh7IHF1ZXJ5IH0pIHtcclxuICAgIGNvbnN0IGlkQ2hhbm5lbCA9IHF1ZXJ5LmlkO1xyXG5cclxuICAgIGNvbnN0IFtyZXFDaGFubmVsLCByZXFTZXJpZXMsIHJlcUF1ZGlvXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcclxuICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH1gKSxcclxuICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vY2hpbGRfY2hhbm5lbHNgKSxcclxuICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vYXVkaW9fY2xpcHNgKSxcclxuICAgIF0pO1xyXG5cclxuICAgIGNvbnN0IGRhdGFDaGFuZWwgPSBhd2FpdCByZXFDaGFubmVsLmpzb24oKTtcclxuICAgIGNvbnN0IGNoYW5uZWwgPSBkYXRhQ2hhbmVsLmJvZHkuY2hhbm5lbDtcclxuXHJcbiAgICBjb25zdCBkYXRhQXVkaW8gPSBhd2FpdCByZXFBdWRpby5qc29uKCk7XHJcbiAgICBjb25zdCBhdWRpb0NsaXBzID0gZGF0YUF1ZGlvLmJvZHkuYXVkaW9fY2xpcHM7XHJcblxyXG4gICAgbGV0IGRhdGFTZXJpZXMgPSBhd2FpdCByZXFTZXJpZXMuanNvbigpO1xyXG4gICAgbGV0IHNlcmllcyA9IGRhdGFTZXJpZXMuYm9keS5jaGFubmVscztcclxuXHJcbiAgICByZXR1cm4geyBwcm9wczogeyBjaGFubmVsLCBhdWRpb0NsaXBzLCBzZXJpZXMgfSB9O1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDaGFubmVsO1xyXG4iXX0= */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Administrador\\\\\\\\Desktop\\\\\\\\platzi\\\\\\\\nextJS\\\\\\\\pages\\\\\\\\channel.js */\"), __jsx(_JSXStyle, {\n    id: \"2493491500\",\n    __self: this\n  }, \"body{margin:0;font-family:system-ui;background:white;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQWRtaW5pc3RyYWRvclxcRGVza3RvcFxccGxhdHppXFxuZXh0SlNcXHBhZ2VzXFxjaGFubmVsLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVEK0IsQUFHOEIsU0FDYSxzQkFDTCxpQkFDckIiLCJmaWxlIjoiQzpcXFVzZXJzXFxBZG1pbmlzdHJhZG9yXFxEZXNrdG9wXFxwbGF0emlcXG5leHRKU1xccGFnZXNcXGNoYW5uZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBDaGFubmVsID0gKHsgY2hhbm5lbCwgYXVkaW9DbGlwcyA9IFtdLCBzZXJpZXMgPSBbXSB9KSA9PiB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDw+XHJcbiAgICAgICAgICAgIDxoZWFkZXI+UG9kY2FzdDwvaGVhZGVyPlxyXG4gICAgICAgICAgICA8aDE+e2NoYW5uZWwudGl0bGV9PC9oMT5cclxuXHJcbiAgICAgICAgICAgIDxoMj5BdWRpb3M8L2gyPlxyXG4gICAgICAgICAgICB7YXVkaW9DbGlwcy5tYXAoKGF1ZGlvKSA9PiAoXHJcbiAgICAgICAgICAgICAgICA8ZGl2PnthdWRpby50aXRsZX08L2Rpdj5cclxuICAgICAgICAgICAgKSl9XHJcbiAgICAgICAgICAgIDxoMj5TZXJpZXM8L2gyPlxyXG4gICAgICAgICAgICB7c2VyaWVzLm1hcCgoc2VyaWUpID0+IChcclxuICAgICAgICAgICAgICAgIDxkaXY+e3NlcmllLnRpdGxlfTwvZGl2PlxyXG4gICAgICAgICAgICApKX1cclxuXHJcbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAgICAgICAgIGgxIHtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBoZWFkZXIge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICM4NzU2Y2E7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTVweDtcclxuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAuY2hhbm5lbHMge1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgZ3JpZC1nYXA6IDE1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTVweDtcclxuICAgICAgICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXV0by1maWxsLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtaW5tYXgoMTYwcHgsIDFmcilcclxuICAgICAgICAgICAgICAgICAgICApO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgYS5jaGFubmVsIHtcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzMzMztcclxuICAgICAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAuY2hhbm5lbCBpbWcge1xyXG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICAgICAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAwcHggMnB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaDIge1xyXG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDVweDtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDAuOWVtO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH08L3N0eWxlPlxyXG5cclxuICAgICAgICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+e2BcclxuICAgICAgICAgICAgICAgIGJvZHkge1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogc3lzdGVtLXVpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBgfTwvc3R5bGU+XHJcbiAgICAgICAgPC8+XHJcbiAgICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFNlcnZlclNpZGVQcm9wcyh7IHF1ZXJ5IH0pIHtcclxuICAgIGNvbnN0IGlkQ2hhbm5lbCA9IHF1ZXJ5LmlkO1xyXG5cclxuICAgIGNvbnN0IFtyZXFDaGFubmVsLCByZXFTZXJpZXMsIHJlcUF1ZGlvXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcclxuICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH1gKSxcclxuICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vY2hpbGRfY2hhbm5lbHNgKSxcclxuICAgICAgICBmZXRjaChgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vYXVkaW9fY2xpcHNgKSxcclxuICAgIF0pO1xyXG5cclxuICAgIGNvbnN0IGRhdGFDaGFuZWwgPSBhd2FpdCByZXFDaGFubmVsLmpzb24oKTtcclxuICAgIGNvbnN0IGNoYW5uZWwgPSBkYXRhQ2hhbmVsLmJvZHkuY2hhbm5lbDtcclxuXHJcbiAgICBjb25zdCBkYXRhQXVkaW8gPSBhd2FpdCByZXFBdWRpby5qc29uKCk7XHJcbiAgICBjb25zdCBhdWRpb0NsaXBzID0gZGF0YUF1ZGlvLmJvZHkuYXVkaW9fY2xpcHM7XHJcblxyXG4gICAgbGV0IGRhdGFTZXJpZXMgPSBhd2FpdCByZXFTZXJpZXMuanNvbigpO1xyXG4gICAgbGV0IHNlcmllcyA9IGRhdGFTZXJpZXMuYm9keS5jaGFubmVscztcclxuXHJcbiAgICByZXR1cm4geyBwcm9wczogeyBjaGFubmVsLCBhdWRpb0NsaXBzLCBzZXJpZXMgfSB9O1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDaGFubmVsO1xyXG4iXX0= */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Administrador\\\\\\\\Desktop\\\\\\\\platzi\\\\\\\\nextJS\\\\\\\\pages\\\\\\\\channel.js */\"));\n};\n\nexport async function getServerSideProps({\n  query\n}) {\n  const idChannel = query.id;\n  const [reqChannel, reqSeries, reqAudio] = await Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)]);\n  const dataChanel = await reqChannel.json();\n  const channel = dataChanel.body.channel;\n  const dataAudio = await reqAudio.json();\n  const audioClips = dataAudio.body.audio_clips;\n  let dataSeries = await reqSeries.json();\n  let series = dataSeries.body.channels;\n  return {\n    props: {\n      channel,\n      audioClips,\n      series\n    }\n  };\n}\nexport default Channel;","map":{"version":3,"sources":["C:/Users/Administrador/Desktop/platzi/nextJS/pages/channel.js"],"names":["Channel","channel","audioClips","series","title","map","audio","serie","getServerSideProps","query","idChannel","id","reqChannel","reqSeries","reqAudio","Promise","all","fetch","dataChanel","json","body","dataAudio","audio_clips","dataSeries","channels","props"],"mappings":";;;;;AAAA,MAAMA,OAAO,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,UAAU,GAAG,EAAxB;AAA4BC,EAAAA,MAAM,GAAG;AAArC,CAAD,KAA+C;AAC3D,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,OAAO,CAACG,KAAb,CAFJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKKF,UAAU,CAACG,GAAX,CAAgBC,KAAD,IACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,KAAK,CAACF,KAAZ,CADH,CALL,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,EASKD,MAAM,CAACE,GAAP,CAAYE,KAAD,IACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,KAAK,CAACH,KAAZ,CADH,CATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,q3IADJ;AA+DH,CAhED;;AAkEA,OAAO,eAAeI,kBAAf,CAAkC;AAAEC,EAAAA;AAAF,CAAlC,EAA6C;AAChD,QAAMC,SAAS,GAAGD,KAAK,CAACE,EAAxB;AAEA,QAAM,CAACC,UAAD,EAAaC,SAAb,EAAwBC,QAAxB,IAAoC,MAAMC,OAAO,CAACC,GAAR,CAAY,CACxDC,KAAK,CAAE,sCAAqCP,SAAU,EAAjD,CADmD,EAExDO,KAAK,CAAE,sCAAqCP,SAAU,iBAAjD,CAFmD,EAGxDO,KAAK,CAAE,sCAAqCP,SAAU,cAAjD,CAHmD,CAAZ,CAAhD;AAMA,QAAMQ,UAAU,GAAG,MAAMN,UAAU,CAACO,IAAX,EAAzB;AACA,QAAMlB,OAAO,GAAGiB,UAAU,CAACE,IAAX,CAAgBnB,OAAhC;AAEA,QAAMoB,SAAS,GAAG,MAAMP,QAAQ,CAACK,IAAT,EAAxB;AACA,QAAMjB,UAAU,GAAGmB,SAAS,CAACD,IAAV,CAAeE,WAAlC;AAEA,MAAIC,UAAU,GAAG,MAAMV,SAAS,CAACM,IAAV,EAAvB;AACA,MAAIhB,MAAM,GAAGoB,UAAU,CAACH,IAAX,CAAgBI,QAA7B;AAEA,SAAO;AAAEC,IAAAA,KAAK,EAAE;AAAExB,MAAAA,OAAF;AAAWC,MAAAA,UAAX;AAAuBC,MAAAA;AAAvB;AAAT,GAAP;AACH;AAED,eAAeH,OAAf","sourcesContent":["const Channel = ({ channel, audioClips = [], series = [] }) => {\r\n    return (\r\n        <>\r\n            <header>Podcast</header>\r\n            <h1>{channel.title}</h1>\r\n\r\n            <h2>Audios</h2>\r\n            {audioClips.map((audio) => (\r\n                <div>{audio.title}</div>\r\n            ))}\r\n            <h2>Series</h2>\r\n            {series.map((serie) => (\r\n                <div>{serie.title}</div>\r\n            ))}\r\n\r\n            <style jsx>{`\r\n                h1 {\r\n                    font-weight: 700;\r\n                    padding: 15px;\r\n                }\r\n                header {\r\n                    color: #fff;\r\n                    background: #8756ca;\r\n                    padding: 15px;\r\n                    text-align: center;\r\n                }\r\n                .channels {\r\n                    display: grid;\r\n                    grid-gap: 15px;\r\n                    padding: 15px;\r\n                    grid-template-columns: repeat(\r\n                        auto-fill,\r\n                        minmax(160px, 1fr)\r\n                    );\r\n                }\r\n                a.channel {\r\n                    display: block;\r\n                    margin-bottom: 0.5em;\r\n                    color: #333;\r\n                    text-decoration: none;\r\n                }\r\n                .channel img {\r\n                    border-radius: 3px;\r\n                    box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.15);\r\n                    width: 100%;\r\n                }\r\n                h2 {\r\n                    padding: 5px;\r\n                    font-size: 0.9em;\r\n                    font-weight: 600;\r\n                    margin: 0;\r\n                    text-align: center;\r\n                }\r\n            `}</style>\r\n\r\n            <style jsx global>{`\r\n                body {\r\n                    margin: 0;\r\n                    font-family: system-ui;\r\n                    background: white;\r\n                }\r\n            `}</style>\r\n        </>\r\n    );\r\n};\r\n\r\nexport async function getServerSideProps({ query }) {\r\n    const idChannel = query.id;\r\n\r\n    const [reqChannel, reqSeries, reqAudio] = await Promise.all([\r\n        fetch(`https://api.audioboom.com/channels/${idChannel}`),\r\n        fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\r\n        fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`),\r\n    ]);\r\n\r\n    const dataChanel = await reqChannel.json();\r\n    const channel = dataChanel.body.channel;\r\n\r\n    const dataAudio = await reqAudio.json();\r\n    const audioClips = dataAudio.body.audio_clips;\r\n\r\n    let dataSeries = await reqSeries.json();\r\n    let series = dataSeries.body.channels;\r\n\r\n    return { props: { channel, audioClips, series } };\r\n}\r\n\r\nexport default Channel;\r\n"]},"metadata":{},"sourceType":"module"}