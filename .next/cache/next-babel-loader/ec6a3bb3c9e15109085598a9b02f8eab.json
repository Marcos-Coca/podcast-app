{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Layout } from '../components/Layout';\nimport { SeriesLits } from '../components/SeriesList';\nimport { PodcastsList } from '../components/PodcastsList';\nimport { Banner } from '../components/Banner';\nimport Error from './_error';\nimport PodcastPlayer from '../components/PodcastPlayer';\n\nconst Channel = ({\n  channel,\n  audioClips = [],\n  series = [],\n  statusCode\n}) => {\n  const {\n    0: openPodcast,\n    1: setOpenPodcast\n  } = useState(null);\n\n  function handleOpenPodcast(e, podcast) {\n    e.preventDefault();\n    setOpenPodcast(podcast);\n  }\n\n  function handleClosePodcast(e) {\n    e.preventDefault();\n    setOpenPodcast(null);\n  }\n\n  if (statusCode !== 200) {\n    return __jsx(Error, {\n      statusCode: statusCode\n    });\n  }\n\n  return __jsx(Layout, {\n    title: `Channel ${channel.title}`\n  }, __jsx(Banner, {\n    image: channel.urls.banner_image.original\n  }), openPodcast && __jsx(PodcastPlayer, {\n    clip: openPodcast,\n    onClose: handleClosePodcast\n  }), __jsx(\"h1\", {\n    className: \"jsx-3402982447\"\n  }, channel.title), __jsx(\"h2\", {\n    className: \"jsx-3402982447\"\n  }, \"Series\"), __jsx(SeriesLits, {\n    series: series\n  }), __jsx(\"h2\", {\n    className: \"jsx-3402982447\"\n  }, \"Ultimos Podcasts\"), __jsx(PodcastsList, {\n    audioClips: audioClips,\n    handlePodcast: handleOpenPodcast\n  }), __jsx(_JSXStyle, {\n    id: \"3402982447\"\n  }, \"h1.jsx-3402982447{font-weight:600;padding:15px;}h2.jsx-3402982447{padding:5px;font-size:32px;font-weight:600;margin:0;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQWRtaW5pc3RyYWRvclxcRG9jdW1lbnRzXFxwbGF0emlcXG5leHRKU1xccGFnZXNcXGNoYW5uZWwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBOEN3QixBQUdxQyxBQUlKLFlBQ0csSUFKRixXQUtHLEVBSnBCLGNBS2EsU0FDUyxrQkFDdEIiLCJmaWxlIjoiQzpcXFVzZXJzXFxBZG1pbmlzdHJhZG9yXFxEb2N1bWVudHNcXHBsYXR6aVxcbmV4dEpTXFxwYWdlc1xcY2hhbm5lbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgTGF5b3V0IH0gZnJvbSAnLi4vY29tcG9uZW50cy9MYXlvdXQnO1xyXG5pbXBvcnQgeyBTZXJpZXNMaXRzIH0gZnJvbSAnLi4vY29tcG9uZW50cy9TZXJpZXNMaXN0JztcclxuaW1wb3J0IHsgUG9kY2FzdHNMaXN0IH0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb2RjYXN0c0xpc3QnO1xyXG5pbXBvcnQgeyBCYW5uZXIgfSBmcm9tICcuLi9jb21wb25lbnRzL0Jhbm5lcic7XHJcbmltcG9ydCBFcnJvciBmcm9tICcuL19lcnJvcic7XHJcbmltcG9ydCBQb2RjYXN0UGxheWVyIGZyb20gJy4uL2NvbXBvbmVudHMvUG9kY2FzdFBsYXllcic7XHJcblxyXG5jb25zdCBDaGFubmVsID0gKHsgY2hhbm5lbCwgYXVkaW9DbGlwcyA9IFtdLCBzZXJpZXMgPSBbXSwgc3RhdHVzQ29kZSB9KSA9PiB7XHJcbiAgICBjb25zdCBbb3BlblBvZGNhc3QsIHNldE9wZW5Qb2RjYXN0XSA9IHVzZVN0YXRlKG51bGwpO1xyXG5cclxuICAgIGZ1bmN0aW9uIGhhbmRsZU9wZW5Qb2RjYXN0KGUsIHBvZGNhc3QpIHtcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgc2V0T3BlblBvZGNhc3QocG9kY2FzdCk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gaGFuZGxlQ2xvc2VQb2RjYXN0KGUpIHtcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgc2V0T3BlblBvZGNhc3QobnVsbCk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHN0YXR1c0NvZGUgIT09IDIwMCkge1xyXG4gICAgICAgIHJldHVybiA8RXJyb3Igc3RhdHVzQ29kZT17c3RhdHVzQ29kZX0gLz47XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8TGF5b3V0IHRpdGxlPXtgQ2hhbm5lbCAke2NoYW5uZWwudGl0bGV9YH0+XHJcbiAgICAgICAgICAgIDxCYW5uZXIgaW1hZ2U9e2NoYW5uZWwudXJscy5iYW5uZXJfaW1hZ2Uub3JpZ2luYWx9IC8+XHJcblxyXG4gICAgICAgICAgICB7b3BlblBvZGNhc3QgJiYgKFxyXG4gICAgICAgICAgICAgICAgPFBvZGNhc3RQbGF5ZXJcclxuICAgICAgICAgICAgICAgICAgICBjbGlwPXtvcGVuUG9kY2FzdH1cclxuICAgICAgICAgICAgICAgICAgICBvbkNsb3NlPXtoYW5kbGVDbG9zZVBvZGNhc3R9XHJcbiAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICApfVxyXG4gICAgICAgICAgICA8aDE+e2NoYW5uZWwudGl0bGV9PC9oMT5cclxuXHJcbiAgICAgICAgICAgIDxoMj5TZXJpZXM8L2gyPlxyXG4gICAgICAgICAgICA8U2VyaWVzTGl0cyBzZXJpZXM9e3Nlcmllc30gLz5cclxuXHJcbiAgICAgICAgICAgIDxoMj5VbHRpbW9zIFBvZGNhc3RzPC9oMj5cclxuICAgICAgICAgICAgPFBvZGNhc3RzTGlzdFxyXG4gICAgICAgICAgICAgICAgYXVkaW9DbGlwcz17YXVkaW9DbGlwc31cclxuICAgICAgICAgICAgICAgIGhhbmRsZVBvZGNhc3Q9e2hhbmRsZU9wZW5Qb2RjYXN0fVxyXG4gICAgICAgICAgICAvPlxyXG5cclxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxyXG4gICAgICAgICAgICAgICAgaDEge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMTVweDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGgyIHtcclxuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAzMnB4O1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH08L3N0eWxlPlxyXG4gICAgICAgIDwvTGF5b3V0PlxyXG4gICAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTZXJ2ZXJTaWRlUHJvcHMoeyBxdWVyeSwgcmVzIH0pIHtcclxuICAgIGNvbnN0IGlkQ2hhbm5lbCA9IHF1ZXJ5LmlkO1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBbcmVxQ2hhbm5lbCwgcmVxU2VyaWVzLCByZXFBdWRpb10gPSBhd2FpdCBQcm9taXNlLmFsbChbXHJcbiAgICAgICAgICAgIGZldGNoKGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfWApLFxyXG4gICAgICAgICAgICBmZXRjaChcclxuICAgICAgICAgICAgICAgIGBodHRwczovL2FwaS5hdWRpb2Jvb20uY29tL2NoYW5uZWxzLyR7aWRDaGFubmVsfS9jaGlsZF9jaGFubmVsc2BcclxuICAgICAgICAgICAgKSxcclxuICAgICAgICAgICAgZmV0Y2goXHJcbiAgICAgICAgICAgICAgICBgaHR0cHM6Ly9hcGkuYXVkaW9ib29tLmNvbS9jaGFubmVscy8ke2lkQ2hhbm5lbH0vYXVkaW9fY2xpcHNgXHJcbiAgICAgICAgICAgICksXHJcbiAgICAgICAgXSk7XHJcblxyXG4gICAgICAgIGlmIChyZXFDaGFubmVsLnN0YXR1cyA+PSA0MDApIHtcclxuICAgICAgICAgICAgcmVzLnN0YXR1c0NvZGUgPSByZXFDaGFubmVsLnN0YXR1cztcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIHByb3BzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2hhbm5lbDogbnVsbCxcclxuICAgICAgICAgICAgICAgICAgICBhdWRpb0NsaXBzOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgICAgIHNlcmllczogbnVsbCxcclxuICAgICAgICAgICAgICAgICAgICBzdGF0dXNDb2RlOiA0MDQsXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCBkYXRhQ2hhbmVsID0gYXdhaXQgcmVxQ2hhbm5lbC5qc29uKCk7XHJcbiAgICAgICAgY29uc3QgY2hhbm5lbCA9IGRhdGFDaGFuZWwuYm9keS5jaGFubmVsO1xyXG5cclxuICAgICAgICBjb25zdCBkYXRhQXVkaW8gPSBhd2FpdCByZXFBdWRpby5qc29uKCk7XHJcbiAgICAgICAgY29uc3QgYXVkaW9DbGlwcyA9IGRhdGFBdWRpby5ib2R5LmF1ZGlvX2NsaXBzO1xyXG5cclxuICAgICAgICBsZXQgZGF0YVNlcmllcyA9IGF3YWl0IHJlcVNlcmllcy5qc29uKCk7XHJcbiAgICAgICAgbGV0IHNlcmllcyA9IGRhdGFTZXJpZXMuYm9keS5jaGFubmVscztcclxuXHJcbiAgICAgICAgcmV0dXJuIHsgcHJvcHM6IHsgY2hhbm5lbCwgYXVkaW9DbGlwcywgc2VyaWVzLCBzdGF0dXNDb2RlOiAyMDAgfSB9O1xyXG4gICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgcHJvcHM6IHtcclxuICAgICAgICAgICAgICAgIGNoYW5uZWw6IG51bGwsXHJcbiAgICAgICAgICAgICAgICBhdWRpb0NsaXBzOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgc2VyaWVzOiBudWxsLFxyXG4gICAgICAgICAgICAgICAgc3RhdHVzQ29kZTogNTAzLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IENoYW5uZWw7XHJcbiJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Administrador\\\\\\\\Documents\\\\\\\\platzi\\\\\\\\nextJS\\\\\\\\pages\\\\\\\\channel.js */\"));\n};\n\nexport async function getServerSideProps({\n  query,\n  res\n}) {\n  const idChannel = query.id;\n\n  try {\n    const [reqChannel, reqSeries, reqAudio] = await Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)]);\n\n    if (reqChannel.status >= 400) {\n      res.statusCode = reqChannel.status;\n      return {\n        props: {\n          channel: null,\n          audioClips: null,\n          series: null,\n          statusCode: 404\n        }\n      };\n    }\n\n    const dataChanel = await reqChannel.json();\n    const channel = dataChanel.body.channel;\n    const dataAudio = await reqAudio.json();\n    const audioClips = dataAudio.body.audio_clips;\n    let dataSeries = await reqSeries.json();\n    let series = dataSeries.body.channels;\n    return {\n      props: {\n        channel,\n        audioClips,\n        series,\n        statusCode: 200\n      }\n    };\n  } catch (err) {\n    return {\n      props: {\n        channel: null,\n        audioClips: null,\n        series: null,\n        statusCode: 503\n      }\n    };\n  }\n}\nexport default Channel;","map":{"version":3,"sources":["C:/Users/Administrador/Documents/platzi/nextJS/pages/channel.js"],"names":["React","useState","Layout","SeriesLits","PodcastsList","Banner","Error","PodcastPlayer","Channel","channel","audioClips","series","statusCode","openPodcast","setOpenPodcast","handleOpenPodcast","e","podcast","preventDefault","handleClosePodcast","title","urls","banner_image","original","getServerSideProps","query","res","idChannel","id","reqChannel","reqSeries","reqAudio","Promise","all","fetch","status","props","dataChanel","json","body","dataAudio","audio_clips","dataSeries","channels","err"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Layout } from '../components/Layout';\r\nimport { SeriesLits } from '../components/SeriesList';\r\nimport { PodcastsList } from '../components/PodcastsList';\r\nimport { Banner } from '../components/Banner';\r\nimport Error from './_error';\r\nimport PodcastPlayer from '../components/PodcastPlayer';\r\n\r\nconst Channel = ({ channel, audioClips = [], series = [], statusCode }) => {\r\n    const [openPodcast, setOpenPodcast] = useState(null);\r\n\r\n    function handleOpenPodcast(e, podcast) {\r\n        e.preventDefault();\r\n        setOpenPodcast(podcast);\r\n    }\r\n\r\n    function handleClosePodcast(e) {\r\n        e.preventDefault();\r\n        setOpenPodcast(null);\r\n    }\r\n\r\n    if (statusCode !== 200) {\r\n        return <Error statusCode={statusCode} />;\r\n    }\r\n\r\n    return (\r\n        <Layout title={`Channel ${channel.title}`}>\r\n            <Banner image={channel.urls.banner_image.original} />\r\n\r\n            {openPodcast && (\r\n                <PodcastPlayer\r\n                    clip={openPodcast}\r\n                    onClose={handleClosePodcast}\r\n                />\r\n            )}\r\n            <h1>{channel.title}</h1>\r\n\r\n            <h2>Series</h2>\r\n            <SeriesLits series={series} />\r\n\r\n            <h2>Ultimos Podcasts</h2>\r\n            <PodcastsList\r\n                audioClips={audioClips}\r\n                handlePodcast={handleOpenPodcast}\r\n            />\r\n\r\n            <style jsx>{`\r\n                h1 {\r\n                    font-weight: 600;\r\n                    padding: 15px;\r\n                }\r\n                h2 {\r\n                    padding: 5px;\r\n                    font-size: 32px;\r\n                    font-weight: 600;\r\n                    margin: 0;\r\n                    text-align: center;\r\n                }\r\n            `}</style>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport async function getServerSideProps({ query, res }) {\r\n    const idChannel = query.id;\r\n    try {\r\n        const [reqChannel, reqSeries, reqAudio] = await Promise.all([\r\n            fetch(`https://api.audioboom.com/channels/${idChannel}`),\r\n            fetch(\r\n                `https://api.audioboom.com/channels/${idChannel}/child_channels`\r\n            ),\r\n            fetch(\r\n                `https://api.audioboom.com/channels/${idChannel}/audio_clips`\r\n            ),\r\n        ]);\r\n\r\n        if (reqChannel.status >= 400) {\r\n            res.statusCode = reqChannel.status;\r\n            return {\r\n                props: {\r\n                    channel: null,\r\n                    audioClips: null,\r\n                    series: null,\r\n                    statusCode: 404,\r\n                },\r\n            };\r\n        }\r\n        const dataChanel = await reqChannel.json();\r\n        const channel = dataChanel.body.channel;\r\n\r\n        const dataAudio = await reqAudio.json();\r\n        const audioClips = dataAudio.body.audio_clips;\r\n\r\n        let dataSeries = await reqSeries.json();\r\n        let series = dataSeries.body.channels;\r\n\r\n        return { props: { channel, audioClips, series, statusCode: 200 } };\r\n    } catch (err) {\r\n        return {\r\n            props: {\r\n                channel: null,\r\n                audioClips: null,\r\n                series: null,\r\n                statusCode: 503,\r\n            },\r\n        };\r\n    }\r\n}\r\n\r\nexport default Channel;\r\n"]},"metadata":{},"sourceType":"module"}